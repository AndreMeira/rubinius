---
layout: doc_fr
title:  Table des matières
toc: true
next: Qu'est-ce que Rubinius ?
next_url: what-is-rubinius
---

1. [Qu'est-ce que Rubinius](/doc/fr/what-is-rubinius/)
1. [Pour commencer](/doc/fr/getting-started/)
    1. [Pré-requis](/doc/fr/getting-started/requirements/)
    1. [Installation](/doc/fr/getting-started/building/)
    1. [Lancer Rubinius](/doc/fr/getting-started/running-rubinius/)
    1. [Résolution des problèmes](/doc/fr/getting-started/troubleshooting/)
1. [Contribuer](/doc/fr/contributing/)
    1. [Communication](/doc/fr/contributing/communication/)
    1. [Guide](/doc/fr/contributing/style-guide)
1. [Ruby](/doc/fr/ruby/)
    1. [Scripts](/doc/fr/ruby/scripts/)
    1. [Methodes](/doc/fr/ruby/methods/)
    1. [Constantes](/doc/fr/ruby/constants/)
    1. [Classes & Modules](/doc/fr/ruby/classes-and-modules/)
    1. [Blocks & Procs](/doc/fr/ruby/blocks-and-procs/)
    1. [Variables Locales](/doc/fr/ruby/local-variables/)
    1. [Variables d'Instance](/doc/fr/ruby/instance-variables/)
    1. [Variables de Classe](/doc/fr/ruby/class-variables/)
    1. [Variables Globales](/doc/fr/ruby/global-variables/)
1. [Specs](/doc/fr/specs/)
    1. [RubySpec](/doc/fr/specs/rubyspec/)
    1. [Compilateur](/doc/fr/specs/compiler/)
1. [Construction (Build System)](/doc/fr/build-system/)
1. [Demarrage (Bootstrapping)](/doc/fr/bootstrapping/)
1. [Machine Virtuelle](/doc/fr/virtual-machine/)
    1. [Instructions](/doc/fr/virtual-machine/instructions/)
    1. [Logique de Distribution personnalisée](/doc/fr/virtual-machine/custom-dispatch-logic/)
1. [Compilateur de ByteCode](/doc/fr/bytecode-compiler/)
    1. [Etape de l'analyseur grammatical (parser)](/doc/fr/bytecode-compiler/parser/)
    1. [AST](/doc/fr/bytecode-compiler/ast/)
    1. [Etape du Generateur](/doc/fr/bytecode-compiler/generator/)
    1. [Etape du l'Encodeur](/doc/fr/bytecode-compiler/encoder/)
    1. [Etape d'Empaquetage](/doc/fr/bytecode-compiler/packager/)
    1. [Etape d'Ecriture](/doc/fr/bytecode-compiler/writer/)
    1. Printers
    1. [Transformations](/doc/fr/bytecode-compiler/transformations/)
    1. [Personnaliser le Pipeline](/doc/fr/bytecode-compiler/customization/)
1. [Compilateur JIT](/doc/fr/jit/)
1. [Nettoyage de la mémoire (Garbage Collector)](/doc/fr/garbage-collector/)
    1. [Nursery](/doc/fr/garbage-collector/nursery/)
    1. [Young Generation](/doc/fr/garbage-collector/young-generation/)
    1. [Mature Generation](/doc/fr/garbage-collector/mature-generation/)
    1. [Large Objects](/doc/fr/garbage-collector/large-objects/)
1. [Systemes de Rubinius](/doc/fr/systems/)
    1. [Les Primitives](/doc/fr/systems/primitives/)
    1. [FFI](/doc/fr/systems/ffi/)
    1. [Concurrence](/doc/fr/systems/concurrency/)
    1. [Entrée/Sortie (IO)](/doc/fr/systems/io/)
    1. [API C](/doc/fr/systems/c-api/)
1. [Outils](/doc/fr/tools/)
    1. [Deboggeur](/doc/fr/tools/debugger/)
    1. [Profileur](/doc/fr/tools/profiler/)
    1. [Analyse de la mémoire](/doc/fr/tools/memory-analysis/)
1. [How-To](/doc/fr/how-to/)
    1. [Ecrire un Ticket](/doc/fr/how-to/write-a-ticket/)
    1. [Ecrire une Ruby Spec](/doc/fr/how-to/write-a-ruby-spec/)
    1. [Corriger une Spec défaillante](/doc/fr/how-to/fix-a-failing-spec/)
    1. [Ecrire des Benchmarks](/doc/fr/how-to/write-benchmarks/)
    1. [Ecrire un post sur le Blog](/doc/fr/how-to/write-a-blog-post/)
    1. [Ecrire de la documentation](/doc/fr/how-to/write-documentation/)
    1. [Traduire la documentation](/doc/fr/how-to/translate-documentation/)
1. [Appendix A - Glossaire](/doc/fr/appendix-a-glossary/)
1. [Appendix B - Reading List](/doc/fr/appendix-b-reading-list/)
1. [Index de la terminologie](/doc/fr/index-of-terms/)
